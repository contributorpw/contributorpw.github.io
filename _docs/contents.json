{
  "paths": [
    {
      "type": "file",
      "value": "index.md"
    },
    {
      "type": "dir",
      "name": "_posts",
      "children": [
        {
          "type": "file",
          "value": "_posts/2023-02-11-welcome-to-jekyll.md"
        }
      ]
    },
    {
      "type": "dir",
      "name": "google-apps-script",
      "children": [
        {
          "type": "file",
          "value": "google-apps-script/create-accurate-timebased-trigger-in-loop.ru.md"
        },
        {
          "type": "file",
          "value": "google-apps-script/save-excel-gmail-attachment-to-sheet.ru.md"
        }
      ]
    }
  ],
  "contents": [
    {
      "path": "index.md",
      "url": "index.html",
      "content": "## Заметки\n\n[Загрузить Excel-вложение Gmail в Таблицу](./google-apps-script/save-excel-gmail-attachment-to-sheet.ru)\n[Создание точного триггера времени на каждый день](./google-apps-script/create-accurate-timebased-trigger-in-loop.ru.md)\n\n## Приложения\n\n- [Prettier в браузере](https://github.contributor.pw/prettier-browser/)\n\n## Read me\n\n## Teach me\n\n- [jwasham/coding-interview-university]\n\n## Inspire me\n\n- [jackfrued/Python-100-Days]\n- [taers232c/GAMADV-XTD3]\n- [TrillCyborg/fullstack]\n- [botpress/botpress]\n- [donnemartin/system-design-primer]\n\n[jwasham/coding-interview-university]: https://github.com/donnemartin/system-design-primer\n[jackfrued/python-100-days]: https://github.com/jackfrued/Python-100-Days\n[taers232c/gamadv-xtd3]: https://github.com/taers232c/GAMADV-XTD3\n[trillcyborg/fullstack]: https://github.com/TrillCyborg/fullstack\n[botpress/botpress]: https://github.com/botpress/botpress\n[donnemartin/system-design-primer]: https://github.com/donnemartin/system-design-primer\n",
      "html": "<h2 id=\"%D0%B7%D0%B0%D0%BC%D0%B5%D1%82%D0%BA%D0%B8\">Заметки <a class=\"heading-anchor-permalink\" href=\"#%D0%B7%D0%B0%D0%BC%D0%B5%D1%82%D0%BA%D0%B8\">#</a></h2>\n<p><a href=\"./google-apps-script/save-excel-gmail-attachment-to-sheet.ru\">Загрузить Excel-вложение Gmail в Таблицу</a>\n<a href=\"./google-apps-script/create-accurate-timebased-trigger-in-loop.ru.html\">Создание точного триггера времени на каждый день</a></p>\n<h2 id=\"%D0%BF%D1%80%D0%B8%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D1%8F\">Приложения <a class=\"heading-anchor-permalink\" href=\"#%D0%BF%D1%80%D0%B8%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D1%8F\">#</a></h2>\n<ul>\n<li><a href=\"https://github.contributor.pw/prettier-browser/\">Prettier в браузере</a></li>\n</ul>\n<h2 id=\"read-me\">Read me <a class=\"heading-anchor-permalink\" href=\"#read-me\">#</a></h2>\n<h2 id=\"teach-me\">Teach me <a class=\"heading-anchor-permalink\" href=\"#teach-me\">#</a></h2>\n<ul>\n<li><a href=\"https://github.com/donnemartin/system-design-primer\">jwasham/coding-interview-university</a></li>\n</ul>\n<h2 id=\"inspire-me\">Inspire me <a class=\"heading-anchor-permalink\" href=\"#inspire-me\">#</a></h2>\n<ul>\n<li><a href=\"https://github.com/jackfrued/Python-100-Days\">jackfrued/Python-100-Days</a></li>\n<li><a href=\"https://github.com/taers232c/GAMADV-XTD3\">taers232c/GAMADV-XTD3</a></li>\n<li><a href=\"https://github.com/TrillCyborg/fullstack\">TrillCyborg/fullstack</a></li>\n<li><a href=\"https://github.com/botpress/botpress\">botpress/botpress</a></li>\n<li><a href=\"https://github.com/donnemartin/system-design-primer\">donnemartin/system-design-primer</a></li>\n</ul>\n",
      "id": 0
    },
    {
      "path": "_posts/2023-02-11-welcome-to-jekyll.md",
      "url": "_posts/2023-02-11-welcome-to-jekyll.html",
      "content": "---\nlayout: post\ntitle:  \"Welcome to Jekyll!\"\ndate:   2023-02-11 07:12:36 +0300\ncategories: jekyll update\n---\nYou’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.\n\nJekyll requires blog post files to be named according to the following format:\n\n`YEAR-MONTH-DAY-title.MARKUP`\n\nWhere `YEAR` is a four-digit number, `MONTH` and `DAY` are both two-digit numbers, and `MARKUP` is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.\n\nJekyll also offers powerful support for code snippets:\n\n{% highlight ruby %}\ndef print_hi(name)\n  puts \"Hi, #{name}\"\nend\nprint_hi('Tom')\n#=> prints 'Hi, Tom' to STDOUT.\n{% endhighlight %}\n\nCheck out the [Jekyll docs][jekyll-docs] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll Talk][jekyll-talk].\n\n[jekyll-docs]: https://jekyllrb.com/docs/home\n[jekyll-gh]:   https://github.com/jekyll/jekyll\n[jekyll-talk]: https://talk.jekyllrb.com/\n",
      "html": "<hr>\n<h2 id=\"layout%3A-posttitle%3A-%E2%80%9Cwelcome-to-jekyll!%E2%80%9Ddate%3A-2023-02-11-07%3A12%3A36-%2B0300categories%3A-jekyll-update\">layout: post\ntitle:  “Welcome to Jekyll!”\ndate:   2023-02-11 07:12:36 +0300\ncategories: jekyll update <a class=\"heading-anchor-permalink\" href=\"#layout%3A-posttitle%3A-%E2%80%9Cwelcome-to-jekyll!%E2%80%9Ddate%3A-2023-02-11-07%3A12%3A36-%2B0300categories%3A-jekyll-update\">#</a></h2>\n<p>You’ll find this post in your <code>_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code>jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>\n<p>Jekyll requires blog post files to be named according to the following format:</p>\n<p><code>YEAR-MONTH-DAY-title.MARKUP</code></p>\n<p>Where <code>YEAR</code> is a four-digit number, <code>MONTH</code> and <code>DAY</code> are both two-digit numbers, and <code>MARKUP</code> is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>\n<p>Jekyll also offers powerful support for code snippets:</p>\n<p>{% highlight ruby %}\ndef print_hi(name)\nputs “Hi, #{name}”\nend\nprint_hi(‘Tom’)\n#=&gt; prints ‘Hi, Tom’ to STDOUT.\n{% endhighlight %}</p>\n<p>Check out the <a href=\"https://jekyllrb.com/docs/home\">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href=\"https://github.com/jekyll/jekyll\">Jekyll’s GitHub repo</a>. If you have questions, you can ask them on <a href=\"https://talk.jekyllrb.com/\">Jekyll Talk</a>.</p>\n",
      "id": 1
    },
    {
      "path": "google-apps-script/create-accurate-timebased-trigger-in-loop.ru.md",
      "url": "google-apps-script/create-accurate-timebased-trigger-in-loop.ru.html",
      "content": "\n# Создание точного триггера времени на каждый день\n\n## Код\n\n```js\n/**\n * Создает триггер для вызвающей функции\n *\n * @param {{\n *   h: number;\n *   m: number;\n *   s: number;\n *   ms: number;\n * }} param0\n */\nfunction createAccurateTimeBasedTrigger_({ h, m, s, ms }) {\n  const fnName = createAccurateTimeBasedTrigger_.caller.name;\n  const date = new Date();\n  date.setHours(h || 0, m || 0, s || 0, ms || 0);\n  date.setTime(date.getTime() + 24 * 60 * 60 * 1000);\n\n  ScriptApp.newTrigger(fnName).timeBased().at(date).create();\n}\n```\n\n## Вызов\n\n### Пример вызова\n\nКаждый раз, когда будет вызываться функция `myFunction` будет создаваться триггер для ее выполнения через сутки в 3:32 по времени скрипта\n\n```js\nfunction myFunction() {\n  // Необходимо поместить вначала функции\n  createAccurateTimeBasedTrigger_({ h: 3, m: 32 });\n}\n```\n\nПример, когда `myFunction` будет вызываться каждые сутки в 0:00\n\n```js\nfunction myFunction() {\n  // Необходимо поместить вначала функции\n  createAccurateTimeBasedTrigger_();\n}\n```\n### Реальное тестирование\n\nВ [Таблице для тестирования] подобный триггер создает запись каждый день. Посмотрим, надолго ли его хватит\n\n[таблице для тестирования]: https://docs.google.com/spreadsheets/d/1IMN6nOkxSJLXv2Oy0Ug0X3hjTK3nQ4zWDF2QsJHppGA/edit?usp=sharing",
      "html": "<h1 id=\"%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5-%D1%82%D0%BE%D1%87%D0%BD%D0%BE%D0%B3%D0%BE-%D1%82%D1%80%D0%B8%D0%B3%D0%B3%D0%B5%D1%80%D0%B0-%D0%B2%D1%80%D0%B5%D0%BC%D0%B5%D0%BD%D0%B8-%D0%BD%D0%B0-%D0%BA%D0%B0%D0%B6%D0%B4%D1%8B%D0%B9-%D0%B4%D0%B5%D0%BD%D1%8C\">Создание точного триггера времени на каждый день <a class=\"heading-anchor-permalink\" href=\"#%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5-%D1%82%D0%BE%D1%87%D0%BD%D0%BE%D0%B3%D0%BE-%D1%82%D1%80%D0%B8%D0%B3%D0%B3%D0%B5%D1%80%D0%B0-%D0%B2%D1%80%D0%B5%D0%BC%D0%B5%D0%BD%D0%B8-%D0%BD%D0%B0-%D0%BA%D0%B0%D0%B6%D0%B4%D1%8B%D0%B9-%D0%B4%D0%B5%D0%BD%D1%8C\">#</a></h1>\n<h2 id=\"%D0%BA%D0%BE%D0%B4\">Код <a class=\"heading-anchor-permalink\" href=\"#%D0%BA%D0%BE%D0%B4\">#</a></h2>\n<pre><code class=\"language-js\">/**\n * Создает триггер для вызвающей функции\n *\n * @param {{\n *   h: number;\n *   m: number;\n *   s: number;\n *   ms: number;\n * }} param0\n */\nfunction createAccurateTimeBasedTrigger_({ h, m, s, ms }) {\n  const fnName = createAccurateTimeBasedTrigger_.caller.name;\n  const date = new Date();\n  date.setHours(h || 0, m || 0, s || 0, ms || 0);\n  date.setTime(date.getTime() + 24 * 60 * 60 * 1000);\n\n  ScriptApp.newTrigger(fnName).timeBased().at(date).create();\n}\n</code></pre>\n<h2 id=\"%D0%B2%D1%8B%D0%B7%D0%BE%D0%B2\">Вызов <a class=\"heading-anchor-permalink\" href=\"#%D0%B2%D1%8B%D0%B7%D0%BE%D0%B2\">#</a></h2>\n<h3 id=\"%D0%BF%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%B2%D1%8B%D0%B7%D0%BE%D0%B2%D0%B0\">Пример вызова <a class=\"heading-anchor-permalink\" href=\"#%D0%BF%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%B2%D1%8B%D0%B7%D0%BE%D0%B2%D0%B0\">#</a></h3>\n<p>Каждый раз, когда будет вызываться функция <code>myFunction</code> будет создаваться триггер для ее выполнения через сутки в 3:32 по времени скрипта</p>\n<pre><code class=\"language-js\">function myFunction() {\n  // Необходимо поместить вначала функции\n  createAccurateTimeBasedTrigger_({ h: 3, m: 32 });\n}\n</code></pre>\n<p>Пример, когда <code>myFunction</code> будет вызываться каждые сутки в 0:00</p>\n<pre><code class=\"language-js\">function myFunction() {\n  // Необходимо поместить вначала функции\n  createAccurateTimeBasedTrigger_();\n}\n</code></pre>\n<h3 id=\"%D1%80%D0%B5%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5-%D1%82%D0%B5%D1%81%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5\">Реальное тестирование <a class=\"heading-anchor-permalink\" href=\"#%D1%80%D0%B5%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5-%D1%82%D0%B5%D1%81%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5\">#</a></h3>\n<p>В <a href=\"https://docs.google.com/spreadsheets/d/1IMN6nOkxSJLXv2Oy0Ug0X3hjTK3nQ4zWDF2QsJHppGA/edit?usp=sharing\">Таблице для тестирования</a> подобный триггер создает запись каждый день. Посмотрим, надолго ли его хватит</p>\n",
      "id": 2
    },
    {
      "path": "google-apps-script/save-excel-gmail-attachment-to-sheet.ru.md",
      "url": "google-apps-script/save-excel-gmail-attachment-to-sheet.ru.html",
      "content": "\n# Загрузить Excel-вложение Gmail в Таблицу\n\n> **Задача**: Необходимо загрузить вложение (файл Excel) Gmail в заданную Таблицу Google\n\n```js\nfunction saveExcelGmailAttachmentToExistingSheet() {\n  const query = \"\"; // Поисковый запрос, чтобы найти нужное сообщение с вложением\n  const targetBookId = \"\"; // Идентификатор Таблицы, в которую нужно загрузить данные\n\n  const mediaData = GmailApp.search(query)[0]\n    .getMessages()[0]\n    .getAttachments()[0];\n\n  const resource = {\n    title: mediaData.getName(),\n    mimetype: mediaData.getContentType(),\n    description: \"\",\n  };\n\n  const file = Drive.Files.insert(resource, mediaData, { convert: true });\n\n  const data = SpreadsheetApp.openById(file.id)\n    .getSheets()[0]\n    .getDataRange()\n    .getValues();\n\n  const targetBook = SpreadsheetApp.openById(targetBookId);\n  const targetSheet = targetBook.getSheets()[0];\n  targetSheet.appendRow([\"\"]);\n  targetSheet\n    .getRange(targetSheet.getLastRow() + 1, 1, data.length, data[0].length)\n    .setValues(data);\n\n  DriveApp.getFileById(file.id).setTrashed(true);\n}\n```\n\n* https://ru.stackoverflow.com/a/1492441/178725\n",
      "html": "<h1 id=\"%D0%B7%D0%B0%D0%B3%D1%80%D1%83%D0%B7%D0%B8%D1%82%D1%8C-excel-%D0%B2%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5-gmail-%D0%B2-%D1%82%D0%B0%D0%B1%D0%BB%D0%B8%D1%86%D1%83\">Загрузить Excel-вложение Gmail в Таблицу <a class=\"heading-anchor-permalink\" href=\"#%D0%B7%D0%B0%D0%B3%D1%80%D1%83%D0%B7%D0%B8%D1%82%D1%8C-excel-%D0%B2%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5-gmail-%D0%B2-%D1%82%D0%B0%D0%B1%D0%BB%D0%B8%D1%86%D1%83\">#</a></h1>\n<blockquote>\n<p><strong>Задача</strong>: Необходимо загрузить вложение (файл Excel) Gmail в заданную Таблицу Google</p>\n</blockquote>\n<pre><code class=\"language-js\">function saveExcelGmailAttachmentToExistingSheet() {\n  const query = &quot;&quot;; // Поисковый запрос, чтобы найти нужное сообщение с вложением\n  const targetBookId = &quot;&quot;; // Идентификатор Таблицы, в которую нужно загрузить данные\n\n  const mediaData = GmailApp.search(query)[0]\n    .getMessages()[0]\n    .getAttachments()[0];\n\n  const resource = {\n    title: mediaData.getName(),\n    mimetype: mediaData.getContentType(),\n    description: &quot;&quot;,\n  };\n\n  const file = Drive.Files.insert(resource, mediaData, { convert: true });\n\n  const data = SpreadsheetApp.openById(file.id)\n    .getSheets()[0]\n    .getDataRange()\n    .getValues();\n\n  const targetBook = SpreadsheetApp.openById(targetBookId);\n  const targetSheet = targetBook.getSheets()[0];\n  targetSheet.appendRow([&quot;&quot;]);\n  targetSheet\n    .getRange(targetSheet.getLastRow() + 1, 1, data.length, data[0].length)\n    .setValues(data);\n\n  DriveApp.getFileById(file.id).setTrashed(true);\n}\n</code></pre>\n<ul>\n<li><a href=\"https://ru.stackoverflow.com/a/1492441/178725\">https://ru.stackoverflow.com/a/1492441/178725</a></li>\n</ul>\n",
      "id": 3
    }
  ]
}